- name: Start Grafana
  block:
    - name: Create root directory
      ansible.builtin.file:
        path: "{{ grafana_data }}"
        state: directory

    - name: Create directory
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: 472 # Grafana user
        group: 472
        recurse: true
      loop:
        - "{{ grafana_data_data }}"
        - "{{ grafana_data_config }}"

    - name: Start grafana container
      community.docker.docker_container:
        name: "{{ grafana_container_name }}"
        image: "{{ grafana_image_name }}:{{ grafana_image_version }}"
        pull: true
        labels:
          traefik.enable: "true"
          http.subdomain: "{{ grafana_http_subdomain }}"
          traefik.http.routers.grafana.entrypoints: "{{ grafana_http_entrypoints }}"
        expose: [3000]
        restart_policy: unless-stopped
        networks:
          - name: "{{ homeserver_services_network }}"
        env:
          TZ: Europe/Berlin
        volumes:
          - "{{ grafana_data_data }}:/var/lib/grafana"
          - "{{ grafana_data_config }}:/etc/grafana"

    - name: Start grafana ntfy bridge container
      community.docker.docker_container:
        name: "{{ grafana_ntfy_container_name }}"
        image: "{{ grafana_ntfy_image_name }}:{{ grafana_ntfy_image_version }}"
        pull: true
        restart_policy: unless-stopped
        networks:
          - name: "{{ homeserver_services_network }}"
        env:
          TZ: Europe/Berlin
          NTFY_URL: "http://{{ ntfy_container_name }}/{{ grafana_ntfy_topic }}"
          NTFY_BAUTH_USER: ""
          NTFY_BAUTH_PASS: "{{ grafana_ntfy_token }}"
          BAUTH_USER: grafana
          BAUTH_PASS: grafana
  tags:
    - grafana-start
- name: Stop Grafana
  community.docker.docker_container:
    name: "{{ grafana_container_name }}"
    state: absent
  tags:
    - grafana-stop
    - stop
    - never
